<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0404.1406                               -->
<workbook original-version='10.5' source-build='10.5.3 (10500.18.0404.1406)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Online Retail (Online Retail (Neo))' inline='true' name='federated.1r2l7el010vu5216rxhrp09na941' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Online Retail (Neo)' name='excel-direct.0s87qob00oqy5910z1af01y21m3e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/prono/Desktop/ADA Assessment/Online Retail (Neo).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0s87qob00oqy5910z1af01y21m3e' name='Online Retail' table='[&apos;Online Retail$&apos;]' type='table'>
          <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='InvoiceNo' ordinal='0' />
            <column datatype='string' name='StockCode' ordinal='1' />
            <column datatype='string' name='Description' ordinal='2' />
            <column datatype='integer' name='Quantity' ordinal='3' />
            <column datatype='datetime' name='InvoiceDateTime' ordinal='4' />
            <column datatype='date' name='InvoiceDate' ordinal='5' />
            <column datatype='real' name='UnitPrice' ordinal='6' />
            <column datatype='real' name='Sales(Quantity*UnitPrice)' ordinal='7' />
            <column datatype='integer' name='CustomerID' ordinal='8' />
            <column datatype='string' name='Country' ordinal='9' />
            <column datatype='string' name='International Shipping/Service?' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>InvoiceNo</remote-name>
            <remote-type>20</remote-type>
            <local-name>[InvoiceNo]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>InvoiceNo</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StockCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[StockCode]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>StockCode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InvoiceDateTime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[InvoiceDateTime]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>InvoiceDateTime</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InvoiceDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[InvoiceDate]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>InvoiceDate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UnitPrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UnitPrice]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>UnitPrice</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales(Quantity*UnitPrice)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales(Quantity*UnitPrice)]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>Sales(Quantity*UnitPrice)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustomerID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CustomerID]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>CustomerID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Shipping/Service?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[International Shipping/Service?]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>International Shipping/Service?</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K10001:no:A1:K10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit/loss' datatype='string' name='[Calculation_1103944864070959104]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IIF([Quantity]&gt;0,&quot;Profit&quot;,&quot;Loss&quot;)' />
      </column>
      <column caption='Invoice Time' datatype='string' name='[Calculation_937593152398704640]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DATEPART(&apos;hour&apos;,[InvoiceDateTime]) = 0 THEN &apos;12&apos;&#13;&#10;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;,[InvoiceDateTime])&lt;10 THEN STR(DATEPART(&apos;hour&apos;,[InvoiceDateTime]))&#13;&#10;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;,[InvoiceDateTime])&gt;12 THEN STR(DATEPART(&apos;hour&apos;,[InvoiceDateTime])-12)&#13;&#10;&#13;&#10;ELSE STR(DATEPART(&apos;hour&apos;,[InvoiceDateTime])) END //hour&#13;&#10;&#13;&#10;+ &apos;:&apos; +&#13;&#10;&#13;&#10;IF DATEPART(&apos;minute&apos;,[InvoiceDateTime])&lt;10 THEN &apos;0&apos;+STR(DATEPART(&apos;minute&apos;,[InvoiceDateTime]))&#13;&#10;&#13;&#10;ELSE STR(DATEPART(&apos;minute&apos;,[InvoiceDateTime])) END //minute&#13;&#10;&#13;&#10;+&apos; &apos;+&#13;&#10;&#13;&#10;IF DATEPART(&apos;hour&apos;,[InvoiceDateTime])&gt;=12 THEN &apos;PM&apos; ELSE &apos;AM&apos; END //AM or PM' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customer ID' datatype='integer' name='[CustomerID]' role='dimension' type='ordinal' />
      <column caption='Invoice Date Time' datatype='datetime' name='[InvoiceDateTime]' role='dimension' type='ordinal' />
      <column caption='Invoice Date' datatype='date' name='[InvoiceDate]' role='dimension' type='ordinal' />
      <column caption='Invoice No' datatype='integer' name='[InvoiceNo]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Stock Code' datatype='string' name='[StockCode]' role='dimension' type='nominal' />
      <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1103944864070959104]' derivation='None' name='[none:Calculation_1103944864070959104:nk]' pivot='key' type='nominal' />
      <column-instance column='[InvoiceDate]' derivation='Month-Trunc' name='[tmn:InvoiceDate:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Customer ID)' hidden='true' name='[Action (Customer ID)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CustomerID]' />
        </groupfilter>
      </group>
      <group caption='Action (Profit/loss,Customer ID)' hidden='true' name='[Action (Profit/loss,Customer ID)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1103944864070959104]' />
          <groupfilter function='level-members' level='[CustomerID]' />
        </groupfilter>
      </group>
      <group caption='Action (Profit/loss,MONTH(Invoice Date))' hidden='true' name='[Action (Profit/loss,MONTH(Invoice Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1103944864070959104]' />
          <groupfilter function='level-members' level='[tmn:InvoiceDate:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.544898' measure-ordering='alphabetic' measure-percentage='0.455102' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1103944864070959104:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Profit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Loss&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='InvoiceNo' />
        <field-sort-custom-order field='StockCode' />
        <field-sort-custom-order field='Description' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='InvoiceDateTime' />
        <field-sort-custom-order field='Calculation_937593152398704640' />
        <field-sort-custom-order field='InvoiceDate' />
        <field-sort-custom-order field='UnitPrice' />
        <field-sort-custom-order field='Sales(Quantity*UnitPrice)' />
        <field-sort-custom-order field='CustomerID' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='International Shipping/Service?' />
      </field-sort-info>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales of top 10 customers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Online Retail (Online Retail (Neo))' name='federated.1r2l7el010vu5216rxhrp09na941' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2l7el010vu5216rxhrp09na941'>
            <column caption='Profit/loss' datatype='string' name='[Calculation_1103944864070959104]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Quantity]&gt;0,&quot;Profit&quot;,&quot;Loss&quot;)' />
            </column>
            <column caption='Customer ID' datatype='integer' name='[CustomerID]' role='dimension' type='ordinal' />
            <column caption='Invoice Date' datatype='date' name='[InvoiceDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales(Quantity*UnitPrice)]' role='measure' type='quantitative' />
            <column-instance column='[CustomerID]' derivation='None' name='[none:CustomerID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales(Quantity*UnitPrice)]' derivation='Sum' name='[sum:Sales(Quantity*UnitPrice):qk]' pivot='key' type='quantitative' />
            <column-instance column='[InvoiceDate]' derivation='Month-Trunc' name='[tmn:InvoiceDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2l7el010vu5216rxhrp09na941].[Action (Profit/loss,Customer ID)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1103944864070959104]' />
              <groupfilter function='level-members' level='[CustomerID]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2l7el010vu5216rxhrp09na941].[Action (Profit/loss,MONTH(Invoice Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1103944864070959104]' />
              <groupfilter function='level-members' level='[tmn:InvoiceDate:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2l7el010vu5216rxhrp09na941].[none:CustomerID:ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales(Quantity*UnitPrice)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:CustomerID:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2l7el010vu5216rxhrp09na941].[none:CustomerID:ok]</column>
            <column>[federated.1r2l7el010vu5216rxhrp09na941].[Action (Profit/loss,Customer ID)]</column>
            <column>[federated.1r2l7el010vu5216rxhrp09na941].[Action (Profit/loss,MONTH(Invoice Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.15292817354202271' />
                <format attr='mark-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk] + [federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk])</rows>
        <cols>[federated.1r2l7el010vu5216rxhrp09na941].[none:CustomerID:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Profit/Loss on sales for top 10 Customers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Online Retail (Online Retail (Neo))' name='federated.1r2l7el010vu5216rxhrp09na941' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2l7el010vu5216rxhrp09na941'>
            <column caption='Profit/loss' datatype='string' name='[Calculation_1103944864070959104]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Quantity]&gt;0,&quot;Profit&quot;,&quot;Loss&quot;)' />
            </column>
            <column caption='Customer ID' datatype='integer' name='[CustomerID]' role='dimension' type='ordinal' />
            <column caption='Invoice Date' datatype='date' name='[InvoiceDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales(Quantity*UnitPrice)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1103944864070959104]' derivation='None' name='[none:Calculation_1103944864070959104:nk]' pivot='key' type='nominal' />
            <column-instance column='[CustomerID]' derivation='None' name='[none:CustomerID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales(Quantity*UnitPrice)]' derivation='Sum' name='[sum:Sales(Quantity*UnitPrice):qk]' pivot='key' type='quantitative' />
            <column-instance column='[InvoiceDate]' derivation='Month-Trunc' name='[tmn:InvoiceDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2l7el010vu5216rxhrp09na941].[Action (Customer ID)]'>
            <groupfilter function='level-members' level='[CustomerID]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1r2l7el010vu5216rxhrp09na941].[Action (Profit/loss,MONTH(Invoice Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1103944864070959104]' />
              <groupfilter function='level-members' level='[tmn:InvoiceDate:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2l7el010vu5216rxhrp09na941].[none:CustomerID:ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales(Quantity*UnitPrice)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:CustomerID:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2l7el010vu5216rxhrp09na941].[none:CustomerID:ok]</column>
            <column>[federated.1r2l7el010vu5216rxhrp09na941].[Action (Profit/loss,MONTH(Invoice Date))]</column>
            <column>[federated.1r2l7el010vu5216rxhrp09na941].[Action (Customer ID)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1r2l7el010vu5216rxhrp09na941].[none:Calculation_1103944864070959104:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.6921546459197998' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1r2l7el010vu5216rxhrp09na941].[none:Calculation_1103944864070959104:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.6921546459197998' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1r2l7el010vu5216rxhrp09na941].[none:Calculation_1103944864070959104:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.6921546459197998' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk] + [federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk])</rows>
        <cols>[federated.1r2l7el010vu5216rxhrp09na941].[none:CustomerID:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Loss/Profit incurred on total Sales per month </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Online Retail (Online Retail (Neo))' name='federated.1r2l7el010vu5216rxhrp09na941' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2l7el010vu5216rxhrp09na941'>
            <column caption='Profit/loss' datatype='string' name='[Calculation_1103944864070959104]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Quantity]&gt;0,&quot;Profit&quot;,&quot;Loss&quot;)' />
            </column>
            <column caption='Customer ID' datatype='integer' name='[CustomerID]' role='dimension' type='ordinal' />
            <column caption='Invoice Date' datatype='date' name='[InvoiceDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales(Quantity*UnitPrice)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1103944864070959104]' derivation='None' name='[none:Calculation_1103944864070959104:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales(Quantity*UnitPrice)]' derivation='Sum' name='[sum:Sales(Quantity*UnitPrice):qk]' pivot='key' type='quantitative' />
            <column-instance column='[InvoiceDate]' derivation='Month-Trunc' name='[tmn:InvoiceDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2l7el010vu5216rxhrp09na941].[Action (Customer ID)]'>
            <groupfilter function='level-members' level='[CustomerID]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1r2l7el010vu5216rxhrp09na941].[Action (Profit/loss,Customer ID)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1103944864070959104]' />
              <groupfilter function='level-members' level='[CustomerID]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2l7el010vu5216rxhrp09na941].[Action (Profit/loss,Customer ID)]</column>
            <column>[federated.1r2l7el010vu5216rxhrp09na941].[Action (Customer ID)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]</rows>
        <cols>([federated.1r2l7el010vu5216rxhrp09na941].[tmn:InvoiceDate:ok] / [federated.1r2l7el010vu5216rxhrp09na941].[none:Calculation_1103944864070959104:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Loss/Profit on sales of top 10 customers</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5125' id='12' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92875' id='5' param='horz' type='layout-flow' w='98400' x='800' y='6125'>
              <zone h='92875' id='3' type='layout-basic' w='82400' x='800' y='6125'>
                <zone h='46438' id='1' name='Sheet 3' w='82400' x='800' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46437' id='7' name='Sheet 1' w='41200' x='800' y='52563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46437' id='8' name='Sheet 2' w='41200' x='42000' y='52563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92875' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='6125'>
                <zone h='8125' id='6' name='Sheet 3' pane-specification-id='0' param='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Quantity:qk]' type='color' w='16000' x='83200' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8250' id='9' name='Sheet 2' pane-specification-id='1' param='[federated.1r2l7el010vu5216rxhrp09na941].[none:Calculation_1103944864070959104:nk]' type='color' w='16000' x='83200' y='14250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2l7el010vu5216rxhrp09na941].[none:CustomerID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1r2l7el010vu5216rxhrp09na941].[none:Calculation_1103944864070959104:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2l7el010vu5216rxhrp09na941].[none:Calculation_1103944864070959104:nk]</field>
            <field>[federated.1r2l7el010vu5216rxhrp09na941].[none:CustomerID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2l7el010vu5216rxhrp09na941].[none:Calculation_1103944864070959104:nk]</field>
            <field>[federated.1r2l7el010vu5216rxhrp09na941].[sum:Sales(Quantity*UnitPrice):qk]</field>
            <field>[federated.1r2l7el010vu5216rxhrp09na941].[yr:InvoiceDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1r2l7el010vu5216rxhrp09na941].[none:Calculation_1103944864070959104:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      H6r3xTeU8ctYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      yCAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      Q8+GSRV0/j/RSDaO/VhNHgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
