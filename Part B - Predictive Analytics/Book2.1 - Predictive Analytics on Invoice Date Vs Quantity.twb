<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0404.1406                               -->
<workbook original-version='10.5' source-build='10.5.3 (10500.18.0404.1406)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Online Retail (Online Retail (Neo))' inline='true' name='federated.1r2l7el010vu5216rxhrp09na941' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Online Retail (Neo)' name='excel-direct.0s87qob00oqy5910z1af01y21m3e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/prono/Desktop/ADA Assessment/Online Retail (Neo).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0s87qob00oqy5910z1af01y21m3e' name='Online Retail' table='[&apos;Online Retail$&apos;]' type='table'>
          <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='InvoiceNo' ordinal='0' />
            <column datatype='string' name='StockCode' ordinal='1' />
            <column datatype='string' name='Description' ordinal='2' />
            <column datatype='integer' name='Quantity' ordinal='3' />
            <column datatype='datetime' name='InvoiceDateTime' ordinal='4' />
            <column datatype='date' name='InvoiceDate' ordinal='5' />
            <column datatype='real' name='UnitPrice' ordinal='6' />
            <column datatype='real' name='Sales(Quantity*UnitPrice)' ordinal='7' />
            <column datatype='integer' name='CustomerID' ordinal='8' />
            <column datatype='string' name='Country' ordinal='9' />
            <column datatype='string' name='International Shipping/Service?' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>InvoiceNo</remote-name>
            <remote-type>20</remote-type>
            <local-name>[InvoiceNo]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>InvoiceNo</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StockCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[StockCode]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>StockCode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InvoiceDateTime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[InvoiceDateTime]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>InvoiceDateTime</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InvoiceDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[InvoiceDate]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>InvoiceDate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UnitPrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UnitPrice]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>UnitPrice</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales(Quantity*UnitPrice)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales(Quantity*UnitPrice)]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>Sales(Quantity*UnitPrice)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustomerID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CustomerID]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>CustomerID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Shipping/Service?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[International Shipping/Service?]</local-name>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias>International Shipping/Service?</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Online Retail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K10001:no:A1:K10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit/Loss' datatype='string' name='[Calculation_1645784194292469760]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IIF([Quantity]&gt;0,&quot;Profit&quot;,&quot;Loss&quot;)' />
      </column>
      <column caption='Invoice Time' datatype='string' name='[Calculation_937593152398704640]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DATEPART(&apos;hour&apos;,[InvoiceDateTime]) = 0 THEN &apos;12&apos;&#13;&#10;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;,[InvoiceDateTime])&lt;10 THEN STR(DATEPART(&apos;hour&apos;,[InvoiceDateTime]))&#13;&#10;&#13;&#10;ELSEIF DATEPART(&apos;hour&apos;,[InvoiceDateTime])&gt;12 THEN STR(DATEPART(&apos;hour&apos;,[InvoiceDateTime])-12)&#13;&#10;&#13;&#10;ELSE STR(DATEPART(&apos;hour&apos;,[InvoiceDateTime])) END //hour&#13;&#10;&#13;&#10;+ &apos;:&apos; +&#13;&#10;&#13;&#10;IF DATEPART(&apos;minute&apos;,[InvoiceDateTime])&lt;10 THEN &apos;0&apos;+STR(DATEPART(&apos;minute&apos;,[InvoiceDateTime]))&#13;&#10;&#13;&#10;ELSE STR(DATEPART(&apos;minute&apos;,[InvoiceDateTime])) END //minute&#13;&#10;&#13;&#10;+&apos; &apos;+&#13;&#10;&#13;&#10;IF DATEPART(&apos;hour&apos;,[InvoiceDateTime])&gt;=12 THEN &apos;PM&apos; ELSE &apos;AM&apos; END //AM or PM' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customer ID' datatype='integer' name='[CustomerID]' role='dimension' type='ordinal' />
      <column caption='Invoice Date Time' datatype='datetime' name='[InvoiceDateTime]' role='dimension' type='ordinal' />
      <column caption='Invoice Date' datatype='date' name='[InvoiceDate]' role='dimension' type='ordinal' />
      <column caption='Invoice No' datatype='integer' name='[InvoiceNo]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Stock Code' datatype='string' name='[StockCode]' role='dimension' type='nominal' />
      <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
      <column-instance column='[InvoiceDate]' derivation='Month' name='[mn:InvoiceDate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[InvoiceDate]' derivation='Quarter' name='[qr:InvoiceDate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[InvoiceDate]' derivation='Year' name='[yr:InvoiceDate:ok]' pivot='key' type='ordinal' />
      <group caption='Action (YEAR(Invoice Date),QUARTER(Invoice Date),MONTH(Invoice Date))' hidden='true' name='[Action (YEAR(Invoice Date),QUARTER(Invoice Date),MONTH(Invoice Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:InvoiceDate:ok]' />
          <groupfilter function='level-members' level='[qr:InvoiceDate:ok]' />
          <groupfilter function='level-members' level='[mn:InvoiceDate:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.544898' measure-ordering='alphabetic' measure-percentage='0.455102' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' palette='summer_10_0' type='palette'>
            <map to='#8fb202'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='InvoiceNo' />
        <field-sort-custom-order field='StockCode' />
        <field-sort-custom-order field='Description' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='InvoiceDateTime' />
        <field-sort-custom-order field='Calculation_937593152398704640' />
        <field-sort-custom-order field='InvoiceDate' />
        <field-sort-custom-order field='UnitPrice' />
        <field-sort-custom-order field='Sales(Quantity*UnitPrice)' />
        <field-sort-custom-order field='CustomerID' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='International Shipping/Service?' />
      </field-sort-info>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trend Line on Invoice Date Vs Quantity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Online Retail (Online Retail (Neo))' name='federated.1r2l7el010vu5216rxhrp09na941' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2l7el010vu5216rxhrp09na941'>
            <column caption='Invoice Date' datatype='date' name='[InvoiceDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[InvoiceDate]' derivation='Month' name='[mn:InvoiceDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[InvoiceDate]' derivation='Quarter' name='[qr:InvoiceDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[InvoiceDate]' derivation='Year' name='[yr:InvoiceDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2l7el010vu5216rxhrp09na941].[Action (YEAR(Invoice Date),QUARTER(Invoice Date),MONTH(Invoice Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:InvoiceDate:ok]' />
              <groupfilter function='level-members' level='[qr:InvoiceDate:ok]' />
              <groupfilter function='level-members' level='[mn:InvoiceDate:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2l7el010vu5216rxhrp09na941].[Action (YEAR(Invoice Date),QUARTER(Invoice Date),MONTH(Invoice Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1r2l7el010vu5216rxhrp09na941].[sum:Quantity:qk]</rows>
        <cols>([federated.1r2l7el010vu5216rxhrp09na941].[yr:InvoiceDate:ok] / ([federated.1r2l7el010vu5216rxhrp09na941].[qr:InvoiceDate:ok] / [federated.1r2l7el010vu5216rxhrp09na941].[mn:InvoiceDate:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Forecast on Invoice Date Vs Quantity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Online Retail (Online Retail (Neo))' name='federated.1r2l7el010vu5216rxhrp09na941' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2l7el010vu5216rxhrp09na941'>
            <column caption='Invoice Date' datatype='date' name='[InvoiceDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' forecast-column-base='[sum:Quantity:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[InvoiceDate]' derivation='Month' name='[mn:InvoiceDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[InvoiceDate]' derivation='Quarter' name='[qr:InvoiceDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[InvoiceDate]' derivation='Year' name='[yr:InvoiceDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2l7el010vu5216rxhrp09na941].[Action (YEAR(Invoice Date),QUARTER(Invoice Date),MONTH(Invoice Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:InvoiceDate:ok]' />
              <groupfilter function='level-members' level='[qr:InvoiceDate:ok]' />
              <groupfilter function='level-members' level='[mn:InvoiceDate:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2l7el010vu5216rxhrp09na941].[Action (YEAR(Invoice Date),QUARTER(Invoice Date),MONTH(Invoice Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1r2l7el010vu5216rxhrp09na941].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-orientation' value='-90' />
                <format attr='wrap' value='auto' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3b348' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1r2l7el010vu5216rxhrp09na941].[fVal:sum:Quantity:qk]</rows>
        <cols>([federated.1r2l7el010vu5216rxhrp09na941].[yr:InvoiceDate:ok] / ([federated.1r2l7el010vu5216rxhrp09na941].[qr:InvoiceDate:ok] / [federated.1r2l7el010vu5216rxhrp09na941].[mn:InvoiceDate:ok]))</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Clustering on Invoice Date Vs Quantity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Online Retail (Online Retail (Neo))' name='federated.1r2l7el010vu5216rxhrp09na941' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2l7el010vu5216rxhrp09na941'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
              <statistical-model class='cluster-k-means'>
                <model-specification>
                  <analysis-fields>
                    <column name='[federated.1r2l7el010vu5216rxhrp09na941].[sum:Quantity:qk]' />
                  </analysis-fields>
                </model-specification>
                <model-summary num-desired-clusters='0' />
              </statistical-model>
            </column>
            <column caption='Invoice Date' datatype='date' name='[InvoiceDate]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[InvoiceDate]' derivation='Month' name='[mn:InvoiceDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[InvoiceDate]' derivation='Quarter' name='[qr:InvoiceDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[InvoiceDate]' derivation='Year' name='[yr:InvoiceDate:ok]' pivot='key' type='ordinal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2l7el010vu5216rxhrp09na941].[Action (YEAR(Invoice Date),QUARTER(Invoice Date),MONTH(Invoice Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:InvoiceDate:ok]' />
              <groupfilter function='level-members' level='[qr:InvoiceDate:ok]' />
              <groupfilter function='level-members' level='[mn:InvoiceDate:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2l7el010vu5216rxhrp09na941].[Action (YEAR(Invoice Date),QUARTER(Invoice Date),MONTH(Invoice Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1r2l7el010vu5216rxhrp09na941].[none:AdhocCluster:1:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1r2l7el010vu5216rxhrp09na941].[sum:Quantity:qk]</rows>
        <cols>([federated.1r2l7el010vu5216rxhrp09na941].[yr:InvoiceDate:ok] / ([federated.1r2l7el010vu5216rxhrp09na941].[qr:InvoiceDate:ok] / [federated.1r2l7el010vu5216rxhrp09na941].[mn:InvoiceDate:ok]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Predictive Analytics on Invoice Date Vs Quantity</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5125' id='12' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92875' id='5' param='horz' type='layout-flow' w='98400' x='800' y='6125'>
              <zone h='92875' id='3' type='layout-basic' w='82400' x='800' y='6125'>
                <zone h='46437' id='1' name='Sheet 3' w='41200' x='800' y='52563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46438' id='7' name='Sheet 2' w='82400' x='800' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46437' id='9' name='Sheet 1' w='41200' x='42000' y='52563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92875' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='6125'>
                <zone fixed-size='517' h='65625' id='8' is-fixed='true' name='Sheet 2' pane-specification-id='0' param='[federated.1r2l7el010vu5216rxhrp09na941].[none:Forecast Indicator:nk]' type='color' w='16000' x='83200' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8250' id='6' name='Sheet 3' pane-specification-id='0' param='[federated.1r2l7el010vu5216rxhrp09na941].[none:AdhocCluster:1:ok]' type='color' w='16000' x='83200' y='71750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2l7el010vu5216rxhrp09na941].[yr:InvoiceDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2l7el010vu5216rxhrp09na941].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2l7el010vu5216rxhrp09na941].[yr:InvoiceDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2l7el010vu5216rxhrp09na941].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2l7el010vu5216rxhrp09na941].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1r2l7el010vu5216rxhrp09na941].[yr:InvoiceDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1r2l7el010vu5216rxhrp09na941].[none:AdhocCluster:1:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      fgXJf/NEvgMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29aXQUV5rn/YuI3FdJqV0CCQRCgNgRixdsbJfxUq5ur9Xump6ume6ZOWfW
      99N7znvm03ycc2Y+zaeZOdPdVTM1VV1VLu/YBbaxWcwuBAgtCC1oSylTuW+RmRFx3w8CbFyA
      wNYGGb9zOKSUoXtvRNz/XZ57n/tIQgiBiUmJIi91AUxMlhJTACYljSkAk5LGFIBJSWMKwOTh
      R8swdH36e/2pKQCTh5/8NJ9+3omaTROLRsjm82SzKoZWQC0USSdixFNZMtFxegYnUbMpIrEk
      2Uway1KX3cRkvvjk3f+Ns7yBqG7HiEbYtbGWYMHKtauT2ApJtjy2iWBC4dznF1mxeSfpmR6z
      BzB5dJAdHnbs3IVF6LTXK3x6MUxLjRNn9WrqvZApAqKALpfR3tpMoKERyVwIM3no0dJcG0vh
      tOaprKwhFI1T67dy5XqKLeub6O86Tdpey6aVPmKqFZEc42pYoyngMgVgUtosiyFQMpl8qNM3
      eXhZFgJQVfWhTt/k4WVZCODuCFKxMBPBMLohSESmCUWTCCFIxyPkCgYIg5mpCeLp3FIX1uQh
      ZHmbQYtZxqej6JkMOhmuD4ZR9DyWnZuIDXWTb9hLoz7GUFhFH5lke8dO7Iq01KU2eYhY3j2A
      xUXLyjpkp4NyLUWgdTtbV5URK3poaW5EliRmshrtra1UV7opFvSlLrHJQ8byFoCeY2A4SEvr
      ejwVFaRDQSYjOfzOb1p5j6wzncqQSWWRLcoSFtbkYWRZC0DXNJLxaU6dOMF0sZwqJUzWXYtH
      i3Hy8hjB/nNYq5rJjPXjqV6F02IOf0wejGWxDhAKhaiurn5o0zd5eFnWPYDJ4pHJZFgGbeGi
      YwrABIBsNrvURVgSHhoBCCFQsxmyav5WS5VXcxgPUaMlDJ1MOk1B0xFCUMjn0R+mG1gEbj2j
      on7rnefUwoLlt7zXAb5FdnqYM4Mh7FqO5m1PUCXH+eMnR3nsJ69TaV/q0t0PgmvdnURVKOgy
      2zetovtMD3U7trDS713qwi0TBINXOpnJQVGX2bZ+BVeujqKmVHY++wTuBcjxoRHA0FSSJx/b
      g6KH6OoOklCStLWuXOpi3T+GSgYfuzrWMXL1CgXcrG9tJv3Q9MGLgKGSFj52d6zj+kAPBcXP
      1vWr6RsJs1Bt3EPz+P02mE6ppGdioOS4PjZGT28fY5PhpS7a/SFZoJBF1TSy+SI260PT9iwe
      tz2jArKW4tp4jI0bWxespX5o3sKKteu42HWBKzNxNj/xHNs2rSMaHMVWVbXURbs/JCtrV9dy
      4dQJssJBU26G8/39YLXh2f0kvodiGLfASFbWttx4RoaDuuoUk8ExopEZtu/ZjXsBaqu5DmAC
      QDgcprKyEkkqrcXEZdED5PN5wuGFG8qk0+mSe7EPSiqVWuoiLAnLQgB2u53KysoFS18IsaDp
      PyqU4jOaVwFMD/fSOxqiom419S6VS1fHWLF2M57CND0j06zZtBNycVbU+ugdTbFuVR1CCAzD
      oFgszmdRbkPX9QVN/1GgVJ/RvAogkc6xek0LsXiacKTA4/ueoPfKAFmK7H96F5euBFGMJBem
      QmzYuR2LMmuEkmUZm802n0W5DUVRFjT9RwFFUbBarSU3VJxXM6hisZBOJinqBkgykiwhAUgy
      siQjCQO9oJItFLnxjYnJkjK/AhAaoXAYzVAo98ocO3IUqy9AuU3n8yNf466qxhuoY29HG319
      wyy5+cmk5DHNoCZA6ZpBH5qVYBOThcAUgElJYwrApKQxBWBS0pgCMClpTAGYlDSmAExKGlMA
      JiWNKQCTksYUgElJYwrApKQxBWBS0pgCMClp5s8hJp/kxNmLpCJhmnbsI339MvEc7Nyzk55z
      51CxsXvPOqbGJaT8KBUtWyh3mPozWVrmTwB2H48//hi9Pb00eCWCNWvZVGPQ3TVE3catePMx
      4skkQz3DNGxoo8wuo+uzAS0Mw0DTtHkryndZ6PQfBW4+o1LbDj2vLpFqKoLkKMdukdENDb1o
      oNgUtKKOruvIspWy8grUbBYQyLKMELP/y/LC9QYLnf6jgCRJKErpBRiZX5/gaIqGptXYZB0j
      1ce5aZmO3Vvp6zxLSHKxc/tq9OYKHGKKULpIjdd2q8VZ6ApqCuDeSJJ0618pYXqEmQCmR5iJ
      SUliCsCkpDEFYFLSmAIwKWlMAZiUNKYATEoaUwAmJY0pAJOSxhSASUljCsCkpDEFYFLSmAIw
      KWlMAZiUNKYATEqaeRVAIjTGia/PkSlqBEf6ON99DUMIRq9e4tLVUQyRIxbLkYtNE1eN+cza
      xOR7MX8OMUaOKwMhdu3ail7MEEwYrPBm6L86hEoZfiNKKC4TmxBkinG2bzX355ssPfMngEKc
      WDzBiWNf0bh2HT5fOb5aGD09RfWWVXiykCmq9HR2seHpp5AlCU3TboVJLRQK81aU76Lr+oKm
      /yhghkn9odgrqKvyUeFXSOZAjY2iRjQq165i4tp1bORoWtdE+64nyYdHSddU4LHPZm+GSV16
      SjVM6vwJQLKzfv1qpuMqGxpqySVsJAsW6mvKKbNLqDgJeN24m8Ame8jNW8YmJt+feXWKd3or
      aPbOfvaWV3PjI2WVdd9c4wSw4pnPjE1MviemGdSkpDEFYFLSmAIwKWlMAZiUNKYATEoaUwAm
      JY0pAJOSxhSASUljCsCkpDEFYFLSmAIwKWlMAZiUNKYATEoaUwAmJc28boc+8cXHaEoZ7du3
      MnjxNImcYMfuDnrOn0PFyu69bUyNSaCOUrl2qxkm1WTJmUcBaOTzgpqWehyolNW2srlG0H1x
      iIb2bXjycRLJJIPdg6zY3H4rTOpNl8iFdMdb6PQfBXRdL8lQsvMnAAE79j5BZnqQq1MKNkNH
      yxtYHFYKBQ1NKyI7bFTV1qKmU9wMkwqzLpELGaJzodN/FCjVZzSPp0JoDA/0ksgJNu+oJnj1
      Ip0zMh27NtPfeY6I7GF7Yw3GigochG6FSb2JGSZ1aTHDpC4hZpjUpccMk2piUoKYAjApaUwB
      mJQ0pgBMSpo5BaBrWcbHptGNJZ8rm5jMO/fVA0yP9PDBO7/jizNX0EwdmDxCzCkAQ88zPjZO
      0erDrYYZDsYXo1wmJovCnAthkqSw65mfUFNpI5E28Ptdi1EuE5NFYQ4B5Dl75FNO92ZpW+NE
      CXTwo72rF6dkJiaLwJw9gLusmsb6DBU1dazd0LgYZTIxWTTmmAMIXL4q3JYCU5NjTIYSi1Mq
      E5NFYg4BWJD0GGndR0tTGcEJcwJs8mgxhwAMouEo8fgMkZSVHdtXLU6pTEwWiTnmADZ27HsB
      q/MUcbVIMpWh3OVfnJKZlBxCCEQuR3FsjOJkEAwDpaoSW1MTss+3IDtV51wHKGRCDE/maWlp
      odzjuOe1wijS09NLQTOYGOrh7KWrGMJgpO8iF/tG0I0s0WiOTCRohkk1uQ1hGKiXLhP9u78n
      c/wERk5FaBrqxUvE/v4fyBw7jrEAgQ7ntALJFguXv/6Ys+eO8qO3/gX7t668y5WC8MQI41Mh
      6utrCaVlmn0qPT3X0G0BfNoM03GZwYthPJVutrTXYhjGrOqFWFB3vIVO/1HAMAx0XV+azAsF
      cmfOkB+5jvvll7E2NsC3Wns9GiN95AjaxwdxP7Mfye2et6znFIChF/E5q2jf1oLFYr/rdfnY
      db483QNamuFgA06nE3eZg/xUEv+qSlwFL5quowgNIVmRAAG3urWFdsQoNUePB2UpvcGyZ8+i
      T4co/8u34Q5umZZABWWvv0bu1ClSBz/B/8brME8efnP3AIqb9p3ruD4zQ6CQv+t19vJm3nqj
      mZGhq1TXr2Tg0hlOT0js2ruDnnNnmJScdHSsQWupwCGChFJFanyzLpGSJC2oP+pCp/8oIEkS
      siwvughEsUi+6yL+N99EmSOUrWvnTtRz5xGxGJZ58vC7DwFIaLqEy1lGTeXcXU/z6lYAtux6
      4tbvOh7fd+tzUxOAOZFeKESxiB6PI/IFJIcDpbwMaRmLX48nQJJRKsrnvFay27FUV1MMBhdP
      AIqtjAOvvkYmeJHOqTxtd5sCmCwZN60n2XPnUTs7QVaQFAWhaaDIuDo6cGzbirwMg4WLYgEU
      GUm5v/MZJKcTkVPnLf85c9ULcQ5/9AVpvcC6nSvmLeMHRgiEpqEnkohCAclhR/H7l3XrtlgY
      mQyJ3/0e2eXC/9O3UMrLkSwWRLGINh0ic/QohdFRfK+8guy4+zxuKZDsDtB0RLGAZJ2jOgqB
      kU4je37YJFgUi7P1SNPuLQBhFOntukiskKd25XochSgFAixmOyKEQKgquQsXyJ0/PztzlhXQ
      NSSbDdfuXTg2bUKyWhexVMsHUSiQfP9DbE1NuPc9CYryjWHBYsHatJKyv/gLkgcPkj58GO9L
      Ly6rRkMp8yPZLBSnprCtWnXPOYiRyaDNzGBtePA9ad/Uo64b9UiAJN9bANO957muejlw4ABT
      /ac5cdlLS9vaB878hyAyWRJ/+AOS1Yr/tddQKiputW7FYJDM0WMUro/ifelFZPvyat0WHCHI
      X7uGyGVxP/kEkuVPX6ckSWCz4nnuWWL/8Au0qSmsDQ1LUNg7IykKzl27yBw9hrWhEcl+5+ZV
      6DqZ4yewr1mD7Pc9cD4imyPxzjsUhUDf9yRxIfCWld17Icxqs5BMxMllVeKJJGvWt7KYbYco
      Fkl+9BGW+nr8b7yOtaEB2elEslqRXS5sq1dT9pdvg66T/uIIYqns2EuEEAL18mWc27bN2QPK
      bjf21lbUKz2LVLr7x7l5M4rPR+rDD9GTSb59VJUQAkNVyXz1FdrEBJ5nn0G6DxOoYRjk83ni
      8TgDfX18/t/+G4evXeOwBF9fu8ZULIZktd67Bwis3c7jRjcDV6/iX9HB1o01P/xu7xchyA9c
      w0il8L/+2h1fsCRJSHY7nuefJ/aLX6Bt3YK1rm7xyrjUGAb6TBTL43O/F0mSsDY2kDtzdhEK
      9mBIVivel18i/cURYr/4JfY1a7CuaARFQZuaJt/fj1JWhv+NN5Bdd3bI0nWdbDZLJBIhGo0y
      PT1NPB5HkiTciQSuTIbd/+zn+Csq8Pv9t4Zac8w6ZJrWbaZp3Xzf8tzcbN0c2++jdfN6sK9d
      S76np7QEwOwWgvtdFJJkZfb6ZYhst+N9/kdoW7eS7+0h19mFMHQs1dV4n38e68oVs5atG4cp
      FwoFYrEYoVCImZkZotEohmHgcrmora1l/fr1BAIB7DYbmfc/wL59O67Vf+rMNa/Ho88rhoE+
      M4P1icfnvFSSJKwrGsmd61yEgi0jZBmlzI8eiWCtv7fwhRAUp6exVFctUuEeHElRsNbVYq2r
      ve33+Xye6ZkZ4vE4oVCIaDSKqqq4XC7Ky8tZsWIFW7ZswefzYf/OPFDoOsbMDJa9e++Y5/IV
      gLjZut3nrENREMb3nAPcMLEWRkfJ9/Wjz8wg2WzYmpuxrVs3u5i0HLdSSBL2tjZyly5h37gB
      SZZvtZBCCJRvWYREoUC+rw/Pc88ucaHB0DXS6TSy1YnbaSWVTGKxu3BYZdLpNEVdEI9FCQYn
      GR8bI5VRKS/zokgS9StX89jjbdgUBafHh902h/VPCIRuICl37iWXrwBkCcXvR49G/6RF+C5C
      CLTpEJaqB2/dhBDoMxFSBz/ByOewt67D1tyMKBQoDA2RPX0G5+4OXDs75rZTLwFy61qix48T
      /uxz1NoaIpEIiUQCRVE4cOAANpsNoetkT55E9nmxrVz6lcxEeJhDn58lFI3TvraeL871kMkJ
      2uusHO+6isVdxesvPU1FmRMjX4B0iLL2LYxeuUQs3UNLY4DfvnuYrfteYFfbHCbRW71kFGt9
      /Z98vfze6E1kGfu6VtTLl7Gvb7vnzF8UCuT7+/E8s/+Bs9HjcRK/+z2ObVtw7tiBZLXeajUd
      WzajR6Mk3/8Qoaq4n3rqviwQ883NVj2fzxOJRIjH48TjcWKxGJlMBuF2wR/+QPW6Vmr37WN9
      WxsejweLoqCnUmSPn6A4Po7/zTfuaCpdjPILIcjn8yQSCaank0yPD9E/mcRQo4wOXKV+3U5s
      Ngf/6b/8V84fPsz+AwewYaBkY5zMGtT54EoySTafYSzj5pUfPUb4fjb4ShL2tnWz9ehGL/lt
      lq0AJEnCsWkTua6LqN1XcLRvvGPlE4ZB9tRpZLcb2+xGo/tG6DqpTz7Fsbkd1+7df5K+JMtY
      Kivxv/k6sV/+b2zNq7Ctav4BdzU3mqaRy+XIZDIkEgmi0SjRaJRcLkc+n8fr9eL1eqmoqKC5
      uZmKigpcLhdGPE7qs8/Rjh1HqapCdzpJZNJoM1Hsa1oo+8u3kedhG/HNBSVRKIAkIzsds6L6
      1hBRCEEulyOVShEOhwmHw8RiMXK5HG63G5/bydMvv0rD2S/JKj7+41//e87+8V0avC7yQkE1
      wAroBZW1u1/AKb3HlGjiX/+7LRz/5Hf4fW7I3F95JUnC0d5OrrNr1qiyadNt73nZCgBAdjrx
      vfIKid//HiOVwtmx8zaLkMjlyBw/QWF4mLK33nzg1k0LhdAjEZyvvXrPll32enE/9hiZr7/G
      2rTyB/UC37Zxa5p2qyWPxWJEIhFSqRS6rmO326m4YbJrb2/H7/djs9lwOBx3DPahlJfjf+1V
      9GiMYjCIyOWQ3W6sDfXIfv8P7rluDhUzx45RHBtHaMVZAbhd2LduRV/TQigaJRwOE4lESCaT
      WK1WqqurCQQCrF+/Ho/Hg9PpJDF5lff+eAx3dRsv7Gjiow9+g29FOzu2N/CHd37F2j0vcu6L
      T6hct5HThw+RlX28vFHnD7/+Be4VW6llgr/78BCacFL9L/6WWte954myw4Hvz14h8dvfYaTS
      OHd13KpHyz5AhhACPRolfegw2vQ0ltpaZJcLI5WiGAphW7UK73PPIns8D5x+5tgx9FgC309+
      PGcZ9USC2N//A+V/+zco98jru9wcumSzWRKJBPF4nHA4TDKZRFVVnE4nfr+fQCBAWVkZFRUV
      eL3eRd++fa8AGcIwULsukjl6FOeOHdjXtzEZTzA5NsrUwAChri5kQ1D3zH5qW1qora2lqqoK
      2/fefGcwNRmiur523k5vFkKgx2Kz9WhqCktt7ezu0nlKH9AZ7L5EVHeytb2V2OQgwYyVzW1N
      TA72ksBP2+oAqSQ4SKHaA/jvI0qkJElYAgH8b72JFp5Bm5zAyOWwrlyJ54UXZi0037N10xNJ
      lPKy+7pWcjgQhoB7BNvTdZ1UKkUsFrvVskejUYrFIrIs45VlPLE4FakUazwePM3NlG3Zgq2m
      +gGsTBqnDn/MUNrBn720n0tffUzfZJIXXv8r1NEzFMs20Nowu1UgPNLNoZP9PPfyfs58dJCw
      WmD9rmepFZN8fSXEK6//BJ917nwL1wbJfP01/p++haV21iCRCAaRXC62Pv88vtdeQ7rQhZic
      pKy9fR62pMjU1t/b8PGgSJKEpaIC/5tvoM/MUJyYxMjn5zNInk6gcS3OYD9Dk2HSkTx17hT9
      A4KM5sJnTBNOQHRCkM1H2bqt8sFuQFGw1tZgrZ2/1WjZ5cLI3N9gUhSLSLKEUBTy+fytMW48
      HicajRKJRFBVFUVRcLvdVFZWUl9fT3t7O2VeL/kzZ1E7O7HW1WFtb0dSFIqTQVK/+Q22NWvw
      7N+P7L6PYyeNIo3r9+IfOsmpnlGSeTs/+8u3oZCgT0kz1RO+IQCVz766yHPPbuerYz28+sZb
      THR/zaQskda9PLtL4vjJAV7a13rv7FSV9Gef4X3xxdlW84ZQ29vbbxOt2P80id/+DrXrIq5d
      HbfNCZYTkqJgqanBUjNbj+ZPAJKNXPQavcEsG7eAogWoqIXJ01NUb1mFJyuTKeToOX+RDU/v
      Q5EkNE27bWUPkeXDX7/DRFLlR6+9zUpHgv/8Pz/m//2Xr/H+Bx8Qy9t49c2fUuVVOPvFx1wc
      DLK24znkiTP0jsfY+tSPiXQfYTyWZ9+P32Zd3exQRdf12fS/W+SGenJfHMGey93RFe/mZC4W
      ixHp7WV6fIzC4cNkVRUhBC6Xi4qKCnw+H01NTXi9XpxOJ5Zvz0V0neyRI+ihMJ633kSprLxV
      OSzbtmJPpch9dZTYO+/gee1VpDmHDQqpyUscPDvKS2/u4vqJy/yP/z7MS2//c9pWNzIxXLxx
      rxJV7iK/eedTWncdQBgFLo8mePL5GgoRlbOX4+x8bMut56Lr+h1DyRaHhxGKgtRQP2eoWduu
      DjKHDmPZ1A5LYG26hcjy0T/+gfFEjmf/7C9odqf5z//9ff6/f/M2nx95H0fNc+zbUQ+aOo8C
      KGQo2stprcsyHdcpRCcxkhrlqxsJjkzgEBnq1zSyseMx1PAY2boArht2dVmWZ8eLwsKzL7/E
      ha+PktMMzp+7THnAi6usmjd/9nM6T35BsShhs9nZuf8V2jZco3O8wBMvvkX7xEUuTWbJW7w8
      tmMFyXgOW1MFAIqi3HE8al21ClU5hjE0hH3DBiRJQgjB5cuXGRsbI5lMAuC0WJBPnabxqaeo
      3LqFQCCAzWZDUZQ5o0+ql7vRxyco/yc/Q3Y6/7RlrKjA/sqPSX7wIYXTZ/A8s//ew6FsjJyz
      jme3JegbDbJp5/MYsUsMjSdR/EFCIZm8tgKjkCGUtfGjp/dwbjBIulHD27gRn0XjN0dOsm3P
      49gUbj0XRVGwfssEfOu1TkxiX7UKm+PeJ4IAWOrqyBYKKMUiyl327CwKwsIzL75I16lj5DSd
      C+cu4g/4cXgreP7lfXz1pYbNZmNmum8eBWCxIxXS5Ow1bGyuJe2DWN5Cc2MVZVaDrFRLpdeL
      ayU4FA8ZzQDrdyqPJJNLzqAaMmLkLJ+f6kdNTdM3GiQ61EegZTvNtbMPNnK9m94QPLl3G+O9
      p5nIeHhyeyOfHuxmfDpJRfPcRmLJZsP7/HMkP/gI2eXG2jxrRvX7/Xg8Hvx+P267ncKRLzF2
      7cL/4gsP5HcgDIPMya/xPPUU0p0qP4AkIVmtuPfvJ/7LX+Lq6EDxee+eqN2NRY0TtTdxoGMT
      oz3nmancyROtDs6eLlJXZ2Xk0jHCrq28+NxuLvRP8tKPnsBaiLFzSy1IBdY01zM2MozNG6Dc
      67znPRj5/D0NDLdhscyaSfUl3m8kyeRSEXKajBjr5PCJXvKZED2jETY2W4DZ8mlGcR4FIFtY
      seobX4GyqnpuTi8DdSsJ3Pg8a4q2cccd3elpPv3yJJlUmu2tb/If/vUODh06hDcX5PenzlA9
      FMT14h7CcYWLn36K6q5Atyj0HnofW3UThvw4qeg0iQIE1txfRbU2NeF94XmSH32EbdUqHBs2
      0OD3ITQN7foomXPnsAQC+H788gN360YigciqWBsb55zkKmV+ZL+f4uQEiq/tHhfa2Nzxzf6o
      tq17bn1+cv/zAGjFIhstFmRJ4pn6lhvf3pxU2ti170f3fQ+WigqKk0GEEHPeg8hmkWQZ+S57
      +heNdIhDX54klUyxbe3r/D//djuHDh2i1lng//79P9LVa2PlmpcoztiXvxn0u0xf7SJfs5GV
      /vtviedMXwj0RJLc+fMUhoYwsllQFCyBAI6tW7CvXfu9VlCLE5Mk33ufin/5t3P2HEIIku++
      h7WxAdeuXQ+c1w/lbmZQLRQi/uvfUPG3f3PPhTQhBLkzZymMjOB/800keXlOgm8yPXCJfNW6
      5b0QdidqWrfOf6KShFLmx/3Mftz7npx1rJEkJIt19kV+T4uGZLEgDANhGMyZghCzvs7LzHFd
      qazEunIlmeMn8Dz37J3dKYVAj0TInj6D//VXl33lB6hZuxkowSiRkYlBjnzxJVPxHLn4NMdP
      nCJdMIhODnL0xBkyhoTscAB5vj5+nIloBqHluXT2BFeGgggtx9kTRxkYn5kzL7nMD7qGkZj7
      WHlRLKKFQrfs7MsFSZbxPPcsxfFx0p99jpHJ3u6xZRgUxydI/O73uHbtxHKHDWfLmYeuB/ih
      pLN5amrL+PSTT6iUcgQaa/nj0VOoY31sbm/ksxN9/Pkz7Zz47BDOpjaOfP4FOxplRtRaNtcr
      nDz0IYXKddRZ516plW027G1tZM+cnXVGv4vFSAhB/koPit+PJRC44zVLiezx4H/zDdKHPyP6
      v/4XtqYmlOpqRKFAcXgYPZnEvf9pHDcsaQ8TJSeAQKWbQ7/8hMZd+xGxFHt2b+ODw+cJuHS+
      PH6ZbQc2AdBYW8FHx75mKJigIudmXA9S1IpokxPEx+Pk8lBfXc49e3tJwvX4Y8T/76/Jne/E
      uX3bnwwhhGFQGBwkc/w4/p++tSxPt5AkCcXnw/fqn6OFwxQGBtCmppBsNpwdHdhWNSM5nQ9d
      5YcSFEAyI/Ozv/k5v/rtx1Q6bIxPVJEnRyzj55++vZv3jw/yWFsNdet38c/XtPOrd7+gtsFB
      w7on6Tv8Ic7qBvbufZYTnx6m8PgWHHO8c9njwf/aqyT+8C6FoSFce/agBCqQJBk9mUDtukh+
      YADvSy/O22lnC4Uky1hrarDWLKJv+ALz0FmBfmj617qOc+zCII8f+HPqlAgff3mJA3/2Cqmh
      cxzpHOPAS89w7PBRnn96E+/98TT7X/4JDR7BHz/6kKqN+9je5OL99z6hde/ztDffvwOOoark
      Oi+gXrqEkcuBEEh2O/Y1a3Dt3YPi9S7p9oFvW4EK2Ti9/UPUrV6PW6S4OjJFy7oNGMlJrs/k
      Wd/Wgk2REULjanc3ZY1rKXdo9PYN07RuIy6RpufqdVasaSPgnXsBbSkpOQHMhWEUyWY1PJ57
      LxB9L264XhpqHhBINtvsv2UwdPi2APo6vyaSFwyNh/EVU1Q01jGV1jBm4tTX2dEqt7N/WxMj
      Jz/hVMJGMhSjNQByRR0TUxkqRQhr1QomQip/8fqBRT1K50EpOSvQXMiy9QdVfmFojA72MzIR
      Jh6e4PLly1zuHyI8OcLl7m76rgeRvB5kj5upqTFGJmdA6EwMDzA8Po0hNIb6eyei+xkAAAow
      SURBVJiKpFiqlql1807cUpF16zdT6VPo7LqCP9CAokXpGx7iSvcgAP1RgzcOPEt9uQ2fQ6br
      Qje9Pf2UVfq41HkRuz+w7CvYci/fQ0cifJ2+gTFOff4ho5EcyUSETz/5nGw2SzIZ5eDBzxBA
      ZqaPL45d4fKXH3P6wiW+OH+Fk0f/yImDB+m8Ps3BTz6lqC+NBHrPHsfa0E7H+hpGYwo//6s3
      mBga4eW3f85Lu7exsmX2ZLkaOUv3VJR4Msf6x17kX/31a6xoqGJsLMHP/tnPyIwPcu/tc0tP
      yU2CFxp/9Wq2txc53W1jbesass4cRUc9K9e0YssdQ3rhxyiAYnOTCA2RII5RtZH09BiaxcPO
      DRWc+eoyietTBH/6Kk33eWryfJLJxOn8+Pf0rt7Kkx0t/P7dz9j3wp/Te/oz+uMOfvLCCt75
      7bv8+NWXOPiPv2Xj3hdJB6/ywZGLvPj6W7hSQ7z3u/fZ8fRLLD+b1u2Yc4B5JhG8xplrSZ55
      cjsK8NXB92h/5icEbEUOHvycZ154AYdFxjA0CkWdzoO/IuZtwl62Ele0C3fTE6xbVcZv/89v
      eeOv/wrXXY7zmG/u5RH2XQyjQDJVpMw/f6GKlgpzCDTPqLkUg5dP83e//EeimRzVq9oJOGSK
      qsraTVuwWySOHXyPiViGw+/+ikTVDg7s20Vh5AzjhUrW1sKvf/Er1u19BucSnEBxP8iy7ZGo
      /GD2AEuAQTSSoDxQPvf+oEXkQXqAR4l5HGDm6Txxlng2R+v2PUz1nyeWFXTs7aDn3Fly2Ni9
      Zx3T4zJSfpTy1Zspvw+f4EcPmYrA3OGATBaHeRSAjW179zBxrR+9mMFb3UJ7taC7a5DaDVvx
      qjHiiSTDvdepbWtllV2+FZZzocOYGoZhhkmdgyUNk7qEzKuJYeRaP66qJqpsRYaSKromkC0y
      umagCwNJVvD4fORzWeB2B4u5XAt/CDcjIJrcnZthUs0h0PdFT3JtYBxbcIY1G7ehJSc5OyWz
      a882es+fYVpysWNHC8aqCuzGNKF0kRrvN2FSTQEsLUsVJnWpMSfBJkDpToLNZtGkpDEFYFLS
      mAIwKWlMAZiUNKYATEoaUwAmJY0pAJOSxhSASUljCsCkpDEFYFLSmAIwKWlMAZiUNKYATEoa
      UwAmJc08CkCQCI8zOh1DCMHU9X7OXxlECMHYwGUuD4xhiBzxuIoaDxFXlziMjokJ8+oRppNJ
      q2QE6KrCZFyn0ZOjb2CInPDjNyKE4hKxCUGmEGf7tvs/V9PEZKGYRwFYqK+vITmZQDOK+Hzl
      +Gth7FaYVMgUVXo6u9jw9FPIdwqTukDcLUyqyTfcLUzqo8689gDhUIjITJLa8mai4TEKMY3A
      miYmB0exk2NF6wradz2BGh4lXVuBx/adMKkLxN3CpJp8w93CpD7qzKMABLmCoLrMg644aFvT
      RCKv0FgXoMwGOclFwOvBtRLsioecOQUwWQbM6xBoZcuab/3svBUKtby6gZsn4czGT7Zyn5Fn
      TUwWFNMMalLSmAIwKWlMAZiUNKYATEoaUwAmJY0pAJOSxhSASUljCsCkpDEFYFLSmAIwKWkW
      PganodF3+QIpvGxtbyQ6I2EzwkjlKykryRBJJsuJBReAGp1C8zdSq8WYSUSJTmnkpQLbaktr
      16HJ8mTBm+BiQeD1OnE5XGhagavdF7F7ymBZxUg0KVUWXACucg+jVy7TPTyO1+1hw87HsaQm
      iGRLz/nCZPmx4EMgxVnGnt0d6CjYbQreNSBTgY6y0FmbmMzJwk+CkbDaHVhv/KQoADIWZt3w
      hBAUCgXi8fiClSCXyy1o+o8C2WyWeDxueoQtJrIsI4TAYrHgmvWUuS+EEA/0onK53IKmD7Ni
      VpT779UeNI+FTl9VVdxu94KlD8vvGcESC+BmXNqH3SdYCIEsy1gsC/c4i8UiVqt17gu/Jwvt
      E7xcn5FpiJ8nHrTleVAWsuIsFsvxGS0bAVy9eJqjR48zNBl54L9VY5NEsg/yFwUmJ8MPnM/d
      uBVh3dDpPPUVR48eJa5+8/3U1CS6/sPCMd+pZY5e7+fyyBRCGHSeOU40da+jXzQmJ6e/Z+6C
      0SsXGIvf5SHrKvGUyvWRIe52m3NFoY9NXOPy4AQAV85+RTD54FbCuXqv2PQkWe323y2bZsWw
      +3ny8Ra6zl8iF7DR03WF2jUbKSNJ19Ugmze3ca37EhVNG3Drca6NTlJWXk6maGFNmcq5S2Os
      blnNyjKZrstXaWnfjqRGCYfS+Kv838lNJ5nMIHJhrkdUtm3bTGi4n4moyqYta8lnZGx6Fsnv
      oP/CJfwr2qjyKCRmptHtPlY21JKMxigLBJC//cyFgaOslk0tq5GlPN2dXThqWjASUwwPjtC0
      fjMOI0c4EsXn8VPVUEV0Oo5QZxiYTLBt51ZykQjBSJy6hkZ8dpmcLuH33Hn+UsxqxIszFItO
      pkIJ6lsKXDl3joK7jvWrKpkZn0T4asgEB9C91RTCQUavj9C2ZQdlrvt/9ULLk9B1jIlp6u2V
      XOnrw3BUsr7Bz2QkhtNtR9V8JGJRGlau/l5LPFkVUrEp9KKbmUgKq1ogfu0COXsFzdV+PJWV
      JCMRKisrHzzxG+TSSQyrBdVZhZ4Oo2rLqAcAkBQrLkWir+cCoUSG3t4+rlybZHfHNmb6u5hM
      5+nt6yMSSdC+rYVkxoHfoVHUJda2byc9OcLFznMksll6rw4x2NdDXcuqOxhcBcIwyGZzpGMT
      DI6GiCR12uoqmUlNEwwmiI2Nk8irFDSDKxcvMTUxjOGoIiBnGBoNEkpkbq/8N5iZGOLs2S5G
      hnoZCiYZ6O6lKNnZsmMbU0NDXB8eoKyqgVhwEg2N8bEg2WyWYnaanqvj9F4ZYc26tQSvjxAc
      H0FX7Pd6YFR4rQz3DFLdsgqMIplckavd3USTIaYSCl49hChroXVFFZLFRXv7akLBB+v9sskQ
      M3GDqckR8pkktupV+JQkwZFhpopOqj2CmUT+gdK8E3XlDrqvjFPX3AB6gUy+yMhgH/lCmmsD
      w0xF0j8ofWEYFONjhDIwOTnBlOpcPgJIz4zz1ZdfErN4qPGWYVFkqior8ViLnDh1DsntRTag
      srISi9WOzWHF53bPjisNg54LJ4nrFsrLylBkC1WBcvxVDfgdt7d0ucQ0Rz8/juRxMxONY3M4
      EbqGy+PFarGgKHYmhy9ycWCUXCZBJqdjt1gwbB5W1Jbjr19F6OpFyqvr7ngf1SvX8thjHVT6
      vdgtEpXVVUhahjMnT6HbXTi8AWoqPNiVPF8fO8lMOkckEsPicIKmUdXQiNNioanKxkBYUO68
      97i5KuBnYEal1iWBlmYmkcdptaLLVhobanG4fUxd66JnOIjD7cFmtWJ5wLceGp+mdkUdKyts
      jEVVhnouMDKVxuV00thYP2+VyBeoJhieocJlg0KamaSKzWbD5qkhOTlAeXX190xZp6/rNANT
      Gbw+L1fPHWVgNITD5eH/B+OXpnWr8l/hAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
